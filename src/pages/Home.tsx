import React, { useState, useEffect } from "react";
import { Link } from "react-router-dom";
import emailjs from 'emailjs-com'
import Layout from '../layout/Layout';
import '../App.css';


export default function Home() {
  return(
    <Layout>
      <Hero />
      <Stakes />
      <About />
      <ValueProposition />
      <Service />
      <Steps />
      <Packages />
      <CustomPack />
      <Contact />
    </Layout>
  );
};

//*-----------------------SECTIONS-----------------------

import heroimg from '../assets/front-women-png.png';
import Decipher from '../assets/Decipher-Logo.png'
//bg-gradient-to-t from-Alpha to-Beta-secondary
export function Hero() {
  const [isHovered, setIsHovered] = useState(false);
  return(
    <section className="bg-[url('/asset/5765870_3015280.jpeg')] bg-cover bg-center">
      <section className='flex flex-col md:flex-row items-center justify-around h-screen container mx-auto mt-20 md:mt-0' onMouseEnter={() => setIsHovered(true)} onMouseLeave={() => setIsHovered(false)}>
          <div className="ml-4 md:ml-0">
            <h1 className='uppercase leading-tight'>Agence Digitale Créative</h1>
              <p className='ml-4 md:ml-10 my-5 leading-8'>Une start-up dynamique dédiée à la transformation des entreprises grâce à des solutions de marketing numérique de pointe et à des stratégies de publicité complètes.</p>
              <button className='bg-Alpha text-Dark py-2 px-8 ml-10 rounded'><Link to='/contact'>Contact & Connect</Link></button>      
          </div>
          
          <div className="w-full flex items-center relative aspect-square">
              <img src={heroimg} alt="hero img" className={`absolute transition-opacity duration-700 ease-in-out ${ isHovered ? 'opacity-0' : 'opacity-100'} `} />
              <img src={Decipher} alt="Decipher" className={`scale-75 absolute transition-opacity duration-700 ease-in-out ${ isHovered ? 'opacity-100' : 'opacity-0'} `} />
          </div>
      </section>
    </section>

  )
};

export function Stakes() {  
  const links = [
    { name: 'Défis économiques et opportunités manquées au Maroc', href: 'https://pwcmaroc.pwc.fr/fr/publications-communique-de-presse/l-economie-marocaine-entre-defis-et-opportunites.html' },
    { name: 'Quelle trajectoire économique et sociale et quels enjeux ?', href: 'https://variances.eu/?p=7987' },
  ]
  const stats = [
    { name: 'Dirigeants marocains exposés aux risques climatiques', value: '53%' },
    { name: 'Présence en ligne des entreprises marocaines', value: '30%' },
    { name: 'sans stratégie numérique', value: '70%' },
    { name: 'croissance PIB', value: '3%' },
  ]
  
    return (
      <div className="relative isolate overflow-hidden py-12">

        <div className="mx-auto max-w-7xl px-6 lg:px-8">
          <div className="mx-auto max-w-2xl lg:mx-0">
            <h2 >Quels sont les enjeux du marketing numérique ?</h2>
            <p className="mt-6 text-lg leading-8 text-gray-300">
              Aujourd'hui, être présent en ligne est essentiel pour la croissance et la réussite de toute entreprise. Malheureusement, de nombreuses entreprises peinent à se démarquer dans l'environnement numérique, laissant ainsi une opportunité à leurs concurrents mieux positionnés. Découvrez les enjeux clés auxquels votre entreprise doit faire face pour rester compétitive.
            </p>
          </div>

          <div className="mx-auto mt-10 max-w-2xl lg:mx-0 lg:max-w-none">
            <div className="grid grid-cols-1 gap-x-8 gap-y-6 text-base font-semibold leading-7 text-white sm:grid-cols-2 md:flex lg:gap-x-10">
              {links.map((link) => (
                <a key={link.name} href={link.href} className="hover:text-Alpha">
                  {link.name} <span aria-hidden="true">&rarr;</span>
                </a>
              ))}
            </div> 
            
            <dl className="mt-16 grid grid-cols-1 items-start gap-8 sm:mt-20 sm:grid-cols-2 lg:grid-cols-4">
              {stats.map((stat) => (
                <div key={stat.name} className="flex flex-col-reverse">
                  <dt className="text-base leading-7 text-gray-300">{stat.name}</dt>
                  <dd className="text-2xl font-bold leading-9 tracking-tight text-Alpha">{stat.value}</dd>
                </div>
              ))}
            </dl>
          </div>
          
        </div>
      </div>
    )
}

import AboutImg from '../assets/AboutIMG.png'
export function About() {
  return(
    <section className='flex flex-col md:flex-row justify-evenly items-center container mx-auto gap-6 md:gap-20'>
      <div className="flex flex-col items-start gap-20">        
        <svg xmlns="http://www.w3.org/2000/svg" height="150" viewBox="0 0 132 132" fill="none" className="animate-spin-slow ml-4">
          <path d="M65.7108 119.036C66.6392 119.036 67.4299 119.289 68.083 119.794C68.7361 120.303 69.2352 121.041 69.5802 122.006C69.9253 122.976 70.0978 124.146 70.0978 125.518C70.0978 126.882 69.9253 128.046 69.5802 129.012C69.2311 129.981 68.7299 130.72 68.0768 131.23C67.4196 131.743 66.6309 132 65.7108 132C64.7907 132 64.0041 131.743 63.351 131.23C62.6938 130.72 62.1926 129.981 61.8476 129.012C61.4984 128.046 61.3239 126.882 61.3239 125.518C61.3239 124.146 61.4964 122.976 61.8414 122.006C62.1865 121.041 62.6855 120.303 63.3387 119.794C63.9918 119.289 64.7825 119.036 65.7108 119.036ZM65.7108 120.392C64.7907 120.392 64.076 120.835 63.5666 121.723C63.0573 122.61 62.8026 123.875 62.8026 125.518C62.8026 126.611 62.9197 127.541 63.1538 128.309C63.3838 129.077 63.7166 129.663 64.152 130.065C64.5833 130.468 65.1029 130.669 65.7108 130.669C66.6227 130.669 67.3354 130.219 67.8489 129.32C68.3623 128.424 68.619 127.157 68.619 125.518C68.619 124.426 68.504 123.497 68.274 122.733C68.044 121.969 67.7133 121.388 67.282 120.989C66.8466 120.591 66.3229 120.392 65.7108 120.392Z" fill="#00E2FF"/>
          <path d="M51.4807 130.229L53.9425 117.853L55.4412 118.151L53.292 128.956L53.3645 128.97L56.7851 127.565L56.4822 129.088L52.9794 130.527L51.4807 130.229Z" fill="#00E2FF"/>
          <path d="M45.4367 114.888C46.2944 115.244 46.9283 115.78 47.3383 116.496C47.7468 117.217 47.9257 118.089 47.8751 119.113C47.8229 120.141 47.5343 121.288 47.0093 122.556C46.4874 123.816 45.8823 124.826 45.1942 125.585C44.5006 126.347 43.7547 126.839 42.9564 127.059C42.1527 127.282 41.3258 127.217 40.4757 126.865C39.6257 126.513 38.9972 125.975 38.5903 125.251C38.178 124.529 37.9979 123.654 38.0501 122.626C38.097 121.601 38.3813 120.458 38.9032 119.198C39.4282 117.931 40.0356 116.915 40.7254 116.151C41.4135 115.392 42.1568 114.901 42.9551 114.681C43.7519 114.464 44.5791 114.533 45.4367 114.888ZM44.918 116.141C44.0679 115.789 43.2378 115.925 42.4277 116.55C41.6176 117.175 40.8982 118.246 40.2694 119.764C39.8513 120.773 39.6034 121.678 39.5257 122.477C39.4443 123.275 39.5277 123.943 39.7759 124.481C40.0203 125.018 40.4234 125.403 40.985 125.636C41.8275 125.985 42.6581 125.842 43.4767 125.207C44.2937 124.577 45.0159 123.504 45.6431 121.99C46.0612 120.98 46.3102 120.079 46.3901 119.285C46.4699 118.491 46.3869 117.827 46.1409 117.294C45.8911 116.759 45.4834 116.375 44.918 116.141Z" fill="#00E2FF"/>
          <path d="M36.2942 109.937C37.0661 110.453 37.5832 111.102 37.8455 111.885C38.1056 112.672 38.1109 113.562 37.8615 114.556C37.6098 115.554 37.1029 116.623 36.3407 117.764C35.583 118.898 34.7926 119.77 33.9694 120.381C33.1405 120.993 32.3131 121.33 31.4871 121.39C30.6553 121.452 29.857 121.228 29.0919 120.716C28.3269 120.205 27.8155 119.555 27.5577 118.765C27.2942 117.976 27.2883 117.083 27.54 116.085C27.786 115.089 28.2878 114.024 29.0454 112.89C29.8076 111.749 30.6015 110.871 31.4269 110.257C32.2501 109.646 33.0747 109.31 33.9008 109.25C34.7245 109.192 35.5223 109.422 36.2942 109.937ZM35.5411 111.064C34.7761 110.553 33.9353 110.525 33.0189 110.98C32.1024 111.435 31.1878 112.345 30.275 113.711C29.6679 114.62 29.2484 115.458 29.0163 116.227C28.7808 116.993 28.7323 117.665 28.8706 118.242C29.0056 118.816 29.3258 119.272 29.8313 119.61C30.5895 120.116 31.432 120.138 32.3587 119.676C33.2831 119.216 34.2006 118.305 35.1111 116.943C35.7182 116.034 36.1383 115.198 36.3715 114.435C36.6047 113.672 36.6527 113.005 36.5154 112.434C36.3748 111.861 36.05 111.405 35.5411 111.064Z" fill="#00E2FF"/>
          <path d="M28.2932 103.298C28.9496 103.954 29.3301 104.692 29.4347 105.511C29.5364 106.333 29.3679 107.207 28.9293 108.134C28.4878 109.063 27.782 110.013 26.8119 110.983C25.8476 111.948 24.9022 112.649 23.9756 113.088C23.0432 113.526 22.1661 113.695 21.3441 113.593C20.5163 113.491 19.7771 113.115 19.1265 112.465C18.4759 111.814 18.1012 111.076 18.0024 110.251C17.8979 109.426 18.0663 108.549 18.5078 107.62C18.9435 106.69 19.6435 105.743 20.6078 104.779C21.5779 103.809 22.5277 103.103 23.4571 102.662C24.3837 102.223 25.258 102.055 26.08 102.156C26.899 102.261 27.6368 102.641 28.2932 103.298ZM27.3347 104.256C26.6841 103.606 25.865 103.414 24.8775 103.681C23.8899 103.948 22.8152 104.663 21.6534 105.825C20.8808 106.597 20.3057 107.338 19.9281 108.047C19.5476 108.753 19.369 109.402 19.3922 109.994C19.4126 110.584 19.6377 111.094 20.0675 111.523C20.7124 112.168 21.5343 112.354 22.5335 112.081C23.5298 111.811 24.6073 111.097 25.7663 109.938C26.5389 109.165 27.114 108.427 27.4916 107.724C27.8691 107.021 28.0463 106.377 28.0231 105.79C27.997 105.2 27.7675 104.689 27.3347 104.256Z" fill="#00E2FF"/>
          <path d="M10.3165 101.15L20.8086 94.1396L21.6575 95.4101L12.4975 101.531L12.5385 101.592L15.951 103.017L14.66 103.88L11.1655 102.421L10.3165 101.15Z" fill="#00E2FF"/>
          <path d="M16.8902 86.0289C17.2455 86.8866 17.3147 87.7138 17.0978 88.5106C16.8772 89.3089 16.387 90.0521 15.6272 90.7403C14.8636 91.4301 13.8481 92.0374 12.5806 92.5625C11.3206 93.0843 10.1787 93.3706 9.15488 93.4212C8.12566 93.4696 7.25078 93.2896 6.53027 92.8811C5.80439 92.4704 5.2654 91.84 4.91329 90.9899C4.56117 90.1399 4.49733 89.3149 4.72177 88.515C4.94084 87.7129 5.43216 86.9669 6.19573 86.2772C6.95393 85.5852 7.963 84.9783 9.22293 84.4564C10.4904 83.9314 11.638 83.6428 12.6657 83.5906C13.6896 83.54 14.5617 83.7189 15.2822 84.1274C15.999 84.5374 16.535 85.1713 16.8902 86.0289ZM15.6379 86.5477C15.2858 85.6976 14.6024 85.207 13.5878 85.076C12.5731 84.945 11.3068 85.1938 9.78882 85.8226C8.77936 86.2407 7.9646 86.7049 7.34454 87.2152C6.72291 87.7217 6.30945 88.2531 6.10417 88.8094C5.89731 89.3619 5.91021 89.919 6.14286 90.4806C6.49182 91.3231 7.1801 91.8094 8.20769 91.9395C9.23149 92.0712 10.5005 91.8235 12.0147 91.1963C13.0241 90.7781 13.8378 90.3166 14.4556 89.8117C15.0735 89.3068 15.4839 88.7789 15.687 88.228C15.8885 87.6732 15.8721 87.1131 15.6379 86.5477Z" fill="#00E2FF"/>
          <path d="M13.9264 76.0632C14.1075 76.9737 14.014 77.7985 13.6459 78.5377C13.2737 79.2776 12.6479 79.9109 11.7685 80.4377C10.885 80.9652 9.77052 81.3628 8.42493 81.6305C7.08739 81.8965 5.9116 81.9545 4.89753 81.8044C3.87864 81.6511 3.0557 81.3038 2.42873 80.7626C1.79692 80.2182 1.39126 79.4948 1.21176 78.5923C1.03225 77.6899 1.13059 76.8683 1.50676 76.1276C1.8781 75.3836 2.5055 74.7479 3.38897 74.2203C4.2676 73.6896 5.37568 73.2912 6.71322 73.0251C8.05881 72.7575 9.24065 72.6983 10.2587 72.8476C11.2728 72.9977 12.0933 73.3433 12.7203 73.8845C13.3433 74.4265 13.7453 75.1528 13.9264 76.0632ZM12.5969 76.3277C12.4174 75.4253 11.8429 74.8108 10.8733 74.4843C9.90373 74.1579 8.6132 74.1549 7.00171 74.4755C5.93007 74.6886 5.0404 74.9849 4.33271 75.3644C3.62422 75.7399 3.11504 76.1804 2.80517 76.686C2.49449 77.1875 2.39846 77.7364 2.51706 78.3327C2.69496 79.2271 3.27514 79.8383 4.2576 80.1664C5.23603 80.4953 6.52898 80.4999 8.13644 80.1801C9.20808 79.967 10.0961 79.673 10.8006 79.2984C11.5051 78.9237 12.0106 78.486 12.3173 77.9853C12.6231 77.4805 12.7163 76.928 12.5969 76.3277Z" fill="#00E2FF"/>
          <path d="M12.9637 65.7108C12.9637 66.6392 12.7111 67.4299 12.2059 68.083C11.6965 68.7361 10.9592 69.2352 9.9939 69.5802C9.0245 69.9253 7.85382 70.0978 6.48186 70.0978C5.11813 70.0978 3.95361 69.9253 2.98831 69.5802C2.01891 69.2311 1.27953 68.7299 0.770183 68.0768C0.256728 67.4196 0 66.6309 0 65.7108C0 64.7907 0.256728 64.0041 0.770183 63.351C1.27953 62.6938 2.01891 62.1926 2.98831 61.8476C3.95361 61.4984 5.11813 61.3239 6.48186 61.3239C7.85382 61.3239 9.0245 61.4964 9.9939 61.8414C10.9592 62.1865 11.6965 62.6855 12.2059 63.3387C12.7111 63.9918 12.9637 64.7825 12.9637 65.7108ZM11.6082 65.7108C11.6082 64.7907 11.1646 64.076 10.2773 63.5666C9.39008 63.0573 8.12492 62.8026 6.48186 62.8026C5.38923 62.8026 4.45885 62.9197 3.69072 63.1538C2.92259 63.3838 2.33725 63.7166 1.9347 64.152C1.53215 64.5833 1.33088 65.1029 1.33088 65.7108C1.33088 66.6227 1.78066 67.3354 2.68024 67.8489C3.5757 68.3623 4.84291 68.619 6.48186 68.619C7.5745 68.619 8.50283 68.504 9.26685 68.274C10.0309 68.044 10.6121 67.7133 11.0105 67.282C11.409 66.8466 11.6082 66.3229 11.6082 65.7108Z" fill="#00E2FF"/>
          <path d="M1.77094 51.4807L14.1472 53.9425L13.8491 55.4412L3.04403 53.292L3.02961 53.3645L4.43489 56.7851L2.91203 56.4822L1.47283 52.9794L1.77094 51.4807Z" fill="#00E2FF"/>
          <path d="M17.1115 45.4367C16.7563 46.2944 16.2203 46.9283 15.5036 47.3383C14.7831 47.7468 13.9109 47.9257 12.887 47.8751C11.8594 47.8229 10.7118 47.5343 9.44426 47.0093C8.18433 46.4874 7.17448 45.8823 6.4147 45.1942C5.6527 44.5006 5.16138 43.7547 4.94074 42.9564C4.71788 42.1527 4.7825 41.3258 5.13461 40.4757C5.48673 39.6257 6.02494 38.9972 6.74924 38.5903C7.47133 38.178 8.3462 37.9979 9.37385 38.0501C10.3993 38.097 11.542 38.3813 12.8019 38.9032C14.0694 39.4282 15.085 40.0356 15.8485 40.7254C16.6083 41.4135 17.0985 42.1568 17.3192 42.9551C17.536 43.7519 17.4668 44.5791 17.1115 45.4367ZM15.8592 44.918C16.2113 44.0679 16.075 43.2378 15.4502 42.4277C14.8254 41.6176 13.754 40.8982 12.236 40.2694C11.2265 39.8513 10.3222 39.6034 9.52292 39.5257C8.72523 39.4443 8.05712 39.5277 7.51859 39.7759C6.98163 40.0203 6.59683 40.4234 6.36419 40.985C6.01522 41.8275 6.15804 42.6581 6.79264 43.4767C7.42346 44.2937 8.49596 45.0159 10.0102 45.6431C11.0196 46.0612 11.9213 46.3102 12.7152 46.3901C13.5091 46.4699 14.1726 46.3869 14.7058 46.1409C15.2405 45.8911 15.625 45.4834 15.8592 44.918Z" fill="#00E2FF"/>
          <path d="M22.0626 36.2942C21.5469 37.0661 20.8975 37.5832 20.1146 37.8455C19.3282 38.1056 18.4379 38.1109 17.4436 37.8615C16.4458 37.6098 15.3766 37.1029 14.2359 36.3407C13.102 35.583 12.2296 34.7926 11.6186 33.9694C11.0066 33.1405 10.6702 32.3131 10.6096 31.4871C10.5478 30.6553 10.7725 29.857 11.2837 29.0919C11.7949 28.3269 12.4453 27.8155 13.2351 27.5577C14.0237 27.2942 14.9169 27.2883 15.9147 27.54C16.9112 27.786 17.9765 28.2878 19.1104 29.0454C20.2511 29.8076 21.1287 30.6015 21.743 31.4269C22.3539 32.2501 22.6897 33.0747 22.7504 33.9008C22.8076 34.7245 22.5784 35.5223 22.0626 36.2942ZM20.9355 35.5411C21.4467 34.7761 21.4749 33.9353 21.0202 33.0189C20.5655 32.1024 19.655 31.1878 18.2889 30.275C17.3804 29.6679 16.5417 29.2484 15.773 29.0163C15.0065 28.7808 14.335 28.7323 13.7584 28.8706C13.184 29.0056 12.728 29.3258 12.3902 29.8313C11.8836 30.5895 11.8617 31.432 12.3244 32.3587C12.7837 33.2831 13.6947 34.2006 15.0574 35.1111C15.9659 35.7182 16.8017 36.1383 17.5647 36.3715C18.3278 36.6047 18.9948 36.6527 19.5657 36.5154C20.1389 36.3748 20.5955 36.05 20.9355 35.5411Z" fill="#00E2FF"/>
          <path d="M28.7022 28.2932C28.0457 28.9496 27.308 29.3301 26.4889 29.4347C25.6669 29.5364 24.7927 29.3679 23.8661 28.9293C22.9367 28.4878 21.9869 27.782 21.0168 26.8119C20.0524 25.8476 19.351 24.9022 18.9124 23.9756C18.4738 23.0432 18.3054 22.1661 18.407 21.3441C18.5087 20.5163 18.8848 19.7771 19.5354 19.1265C20.1861 18.4759 20.9238 18.1012 21.7487 18.0024C22.5736 17.8979 23.4508 18.0663 24.3802 18.5078C25.3097 18.9435 26.2565 19.6435 27.2209 20.6078C28.191 21.5779 28.8968 22.5277 29.3383 23.4571C29.7769 24.3837 29.9453 25.258 29.8437 26.08C29.7391 26.899 29.3586 27.6368 28.7022 28.2932ZM27.7437 27.3347C28.3943 26.6841 28.586 25.865 28.3188 24.8775C28.0516 23.8899 27.337 22.8152 26.1752 21.6534C25.4026 20.8808 24.662 20.3057 23.9532 19.9281C23.2474 19.5476 22.5983 19.369 22.0057 19.3922C21.4161 19.4126 20.9064 19.6377 20.4765 20.0675C19.8317 20.7124 19.6458 21.5343 19.9188 22.5335C20.189 23.5298 20.9035 24.6073 22.0624 25.7663C22.835 26.5389 23.5727 27.114 24.2756 27.4916C24.9785 27.8691 25.6234 28.0463 26.2101 28.0231C26.7997 27.997 27.3109 27.7675 27.7437 27.3347Z" fill="#00E2FF"/>
          <path d="M36.7751 21.7413C36.0032 22.257 35.2054 22.4863 34.3816 22.4291C33.5556 22.3684 32.731 22.0326 31.9078 21.4217C31.0824 20.8074 30.2885 19.9298 29.5263 18.7891C28.7687 17.6552 28.2651 16.5911 28.0157 15.5968C27.7675 14.5968 27.7734 13.7036 28.0334 12.9172C28.2946 12.1252 28.8078 11.4735 29.5728 10.9623C30.3379 10.4512 31.1345 10.2276 31.9628 10.2917C32.7923 10.35 33.6197 10.6864 34.4452 11.3007C35.2718 11.9094 36.0639 12.7806 36.8216 13.9145C37.5838 15.0553 38.0907 16.1245 38.3424 17.1222C38.5918 18.1166 38.5865 19.0069 38.3264 19.7932C38.0641 20.5762 37.5469 21.2255 36.7751 21.7413ZM36.022 20.6142C36.787 20.103 37.1348 19.3371 37.0654 18.3164C36.996 17.2957 36.5049 16.1023 35.592 14.7361C34.985 13.8276 34.3708 13.1191 33.7493 12.6105C33.1313 12.0996 32.5295 11.7977 31.9438 11.7049C31.3615 11.6098 30.8177 11.7312 30.3122 12.0689C29.554 12.5756 29.2113 13.3455 29.2842 14.3787C29.3547 15.4085 29.8453 16.6048 30.7559 17.9675C31.3629 18.876 31.9743 19.584 32.59 20.0915C33.2057 20.5989 33.8036 20.8985 34.3836 20.9902C34.9669 21.0796 35.5131 20.9542 36.022 20.6142Z" fill="#00E2FF"/>
          <path d="M42.3886 4.52902L47.2175 16.1872L45.8058 16.7719L41.5899 6.59382L41.5216 6.62211L39.4582 9.69095L38.864 8.25646L40.9768 5.11378L42.3886 4.52902Z" fill="#00E2FF"/>
          <path d="M54.8346 1.10381L57.2964 13.48L55.7978 13.7781L53.6485 2.97312L53.576 2.98754L50.9535 5.59486L50.6506 4.07201L53.336 1.40192L54.8346 1.10381Z" fill="#00E2FF"/>
          <path d="M66.2892 12.9637C65.3608 12.9637 64.5701 12.7111 63.917 12.2059C63.2639 11.6965 62.7648 10.9592 62.4198 9.9939C62.0747 9.0245 61.9022 7.85382 61.9022 6.48186C61.9022 5.11813 62.0747 3.95361 62.4198 2.98831C62.7689 2.01891 63.2701 1.27953 63.9232 0.770183C64.5804 0.256728 65.3691 0 66.2892 0C67.2093 0 67.9959 0.256728 68.649 0.770183C69.3062 1.27953 69.8074 2.01891 70.1524 2.98831C70.5016 3.95361 70.6761 5.11813 70.6761 6.48186C70.6761 7.85382 70.5036 9.0245 70.1586 9.9939C69.8135 10.9592 69.3145 11.6965 68.6613 12.2059C68.0082 12.7111 67.2175 12.9637 66.2892 12.9637ZM66.2892 11.6082C67.2093 11.6082 67.924 11.1646 68.4334 10.2773C68.9427 9.39008 69.1974 8.12492 69.1974 6.48186C69.1974 5.38923 69.0803 4.45885 68.8462 3.69072C68.6162 2.92259 68.2834 2.33725 67.848 1.9347C67.4167 1.53215 66.8971 1.33088 66.2892 1.33088C65.3773 1.33088 64.6646 1.78066 64.1512 2.68024C63.6377 3.5757 63.381 4.84291 63.381 6.48186C63.381 7.5745 63.496 8.50283 63.726 9.26685C63.956 10.0309 64.2867 10.6121 64.718 11.0105C65.1534 11.409 65.6771 11.6082 66.2892 11.6082Z" fill="#00E2FF"/>
          <path d="M80.5193 1.77094L78.0575 14.1472L76.5588 13.8491L78.708 3.04403L78.6355 3.02961L75.2149 4.43489L75.5178 2.91203L79.0206 1.47283L80.5193 1.77094Z" fill="#00E2FF"/>
          <path d="M86.5633 17.1115C85.7056 16.7563 85.0718 16.2203 84.6617 15.5036C84.2532 14.7831 84.0743 13.9109 84.1249 12.887C84.1771 11.8594 84.4657 10.7118 84.9907 9.44426C85.5126 8.18433 86.1177 7.17448 86.8058 6.4147C87.4994 5.6527 88.2453 5.16138 89.0436 4.94074C89.8473 4.71788 90.6742 4.7825 91.5243 5.13461C92.3743 5.48673 93.0028 6.02494 93.4097 6.74924C93.822 7.47133 94.0021 8.3462 93.9499 9.37385C93.903 10.3993 93.6187 11.542 93.0968 12.8019C92.5718 14.0694 91.9644 15.085 91.2746 15.8485C90.5865 16.6083 89.8432 17.0985 89.0449 17.3192C88.2481 17.536 87.4209 17.4668 86.5633 17.1115ZM87.082 15.8592C87.9321 16.2113 88.7622 16.075 89.5723 15.4502C90.3824 14.8254 91.1018 13.754 91.7306 12.236C92.1487 11.2265 92.3966 10.3222 92.4743 9.52292C92.5557 8.72523 92.4723 8.05712 92.2241 7.51859C91.9797 6.98163 91.5766 6.59683 91.015 6.36419C90.1725 6.01522 89.3419 6.15804 88.5233 6.79264C87.7063 7.42346 86.9841 8.49596 86.3569 10.0102C85.9388 11.0196 85.6898 11.9213 85.6099 12.7152C85.5301 13.5091 85.6132 14.1726 85.8591 14.7058C86.1089 15.2405 86.5166 15.625 87.082 15.8592Z" fill="#00E2FF"/>
          <path d="M95.7058 22.0626C94.9339 21.5469 94.4168 20.8975 94.1545 20.1146C93.8944 19.3282 93.8891 18.4379 94.1385 17.4436C94.3902 16.4458 94.8971 15.3766 95.6593 14.2359C96.417 13.102 97.2074 12.2296 98.0306 11.6186C98.8595 11.0066 99.6869 10.6702 100.513 10.6096C101.345 10.5478 102.143 10.7725 102.908 11.2837C103.673 11.7949 104.185 12.4453 104.442 13.2351C104.706 14.0237 104.712 14.9169 104.46 15.9147C104.214 16.9112 103.712 17.9765 102.955 19.1104C102.192 20.2511 101.399 21.1287 100.573 21.743C99.7499 22.3539 98.9253 22.6897 98.0992 22.7504C97.2755 22.8076 96.4777 22.5784 95.7058 22.0626ZM96.4589 20.9355C97.224 21.4467 98.0647 21.4749 98.9811 21.0202C99.8976 20.5655 100.812 19.655 101.725 18.2889C102.332 17.3804 102.752 16.5417 102.984 15.773C103.219 15.0065 103.268 14.335 103.129 13.7584C102.994 13.184 102.674 12.728 102.169 12.3902C101.41 11.8836 100.568 11.8617 99.6413 12.3244C98.7169 12.7837 97.7994 13.6947 96.8889 15.0574C96.2818 15.9659 95.8617 16.8017 95.6285 17.5647C95.3953 18.3278 95.3473 18.9948 95.4846 19.5657C95.6252 20.1389 95.95 20.5955 96.4589 20.9355Z" fill="#00E2FF"/>
          <path d="M103.707 28.7022C103.05 28.0457 102.67 27.308 102.565 26.4889C102.464 25.6669 102.632 24.7927 103.071 23.8661C103.512 22.9367 104.218 21.9869 105.188 21.0168C106.152 20.0524 107.098 19.351 108.024 18.9124C108.957 18.4738 109.834 18.3054 110.656 18.407C111.484 18.5087 112.223 18.8848 112.874 19.5354C113.524 20.1861 113.899 20.9238 113.998 21.7487C114.102 22.5736 113.934 23.4508 113.492 24.3802C113.057 25.3097 112.357 26.2565 111.392 27.2209C110.422 28.191 109.472 28.8968 108.543 29.3383C107.616 29.7769 106.742 29.9453 105.92 29.8437C105.101 29.7391 104.363 29.3586 103.707 28.7022ZM104.665 27.7437C105.316 28.3943 106.135 28.586 107.123 28.3188C108.11 28.0516 109.185 27.337 110.347 26.1752C111.119 25.4026 111.694 24.662 112.072 23.9532C112.452 23.2474 112.631 22.5983 112.608 22.0057C112.587 21.4161 112.362 20.9064 111.932 20.4765C111.288 19.8317 110.466 19.6458 109.466 19.9188C108.47 20.189 107.393 20.9035 106.234 22.0624C105.461 22.835 104.886 23.5727 104.508 24.2756C104.131 24.9785 103.954 25.6234 103.977 26.2101C104.003 26.7997 104.233 27.3109 104.665 27.7437Z" fill="#00E2FF"/>
          <path d="M121.683 30.8499L111.191 37.8604L110.342 36.5899L119.503 30.4694L119.461 30.4079L116.049 28.9828L117.34 28.1202L120.835 29.5793L121.683 30.8499Z" fill="#00E2FF"/>
          <path d="M127.471 42.3886L115.813 47.2175L115.228 45.8058L125.406 41.5899L125.378 41.5216L122.309 39.4582L123.744 38.864L126.886 40.9768L127.471 42.3886Z" fill="#00E2FF"/>
          <path d="M118.074 55.9368C117.893 55.0263 117.986 54.2015 118.354 53.4623C118.726 52.7224 119.352 52.0891 120.231 51.5623C121.115 51.0348 122.229 50.6372 123.575 50.3695C124.913 50.1035 126.088 50.0455 127.102 50.1956C128.121 50.3489 128.944 50.6962 129.571 51.2374C130.203 51.7818 130.609 52.5052 130.788 53.4077C130.968 54.3101 130.869 55.1317 130.493 55.8724C130.122 56.6164 129.494 57.2521 128.611 57.7797C127.732 58.3104 126.624 58.7088 125.287 58.9749C123.941 59.2425 122.759 59.3017 121.741 59.1524C120.727 59.0023 119.907 58.6567 119.28 58.1155C118.657 57.5735 118.255 56.8473 118.074 55.9368ZM119.403 55.6723C119.583 56.5747 120.157 57.1892 121.127 57.5157C122.096 57.8421 123.387 57.8451 124.998 57.5245C126.07 57.3114 126.96 57.0151 127.667 56.6356C128.376 56.2601 128.885 55.8196 129.195 55.314C129.506 54.8125 129.602 54.2636 129.483 53.6673C129.305 52.7729 128.725 52.1617 127.742 51.8336C126.764 51.5047 125.471 51.5001 123.864 51.8199C122.792 52.033 121.904 52.327 121.199 52.7016C120.495 53.0763 119.989 53.514 119.683 54.0147C119.377 54.5195 119.284 55.072 119.403 55.6723Z" fill="#00E2FF"/>
          <path d="M119.036 66.2892C119.036 65.3608 119.289 64.5701 119.794 63.917C120.303 63.2639 121.041 62.7648 122.006 62.4198C122.976 62.0747 124.146 61.9022 125.518 61.9022C126.882 61.9022 128.046 62.0747 129.012 62.4198C129.981 62.7689 130.72 63.2701 131.23 63.9232C131.743 64.5804 132 65.3691 132 66.2892C132 67.2093 131.743 67.9959 131.23 68.649C130.72 69.3062 129.981 69.8074 129.012 70.1524C128.046 70.5016 126.882 70.6761 125.518 70.6761C124.146 70.6761 122.976 70.5036 122.006 70.1586C121.041 69.8135 120.303 69.3145 119.794 68.6613C119.289 68.0082 119.036 67.2175 119.036 66.2892ZM120.392 66.2892C120.392 67.2093 120.835 67.924 121.723 68.4334C122.61 68.9427 123.875 69.1974 125.518 69.1974C126.611 69.1974 127.541 69.0803 128.309 68.8462C129.077 68.6162 129.663 68.2834 130.065 67.848C130.468 67.4167 130.669 66.8971 130.669 66.2892C130.669 65.3773 130.219 64.6646 129.32 64.1512C128.424 63.6377 127.157 63.381 125.518 63.381C124.426 63.381 123.497 63.496 122.733 63.726C121.969 63.956 121.388 64.2867 120.989 64.718C120.591 65.1534 120.392 65.6771 120.392 66.2892Z" fill="#00E2FF"/>
          <path d="M130.229 80.5193L117.853 78.0575L118.151 76.5588L128.956 78.708L128.97 78.6355L127.565 75.2149L129.088 75.5178L130.527 79.0206L130.229 80.5193Z" fill="#00E2FF"/>
          <path d="M114.888 86.5633C115.244 85.7056 115.78 85.0718 116.496 84.6617C117.217 84.2532 118.089 84.0743 119.113 84.1249C120.141 84.1771 121.288 84.4657 122.556 84.9907C123.816 85.5126 124.826 86.1177 125.585 86.8058C126.347 87.4994 126.839 88.2453 127.059 89.0436C127.282 89.8473 127.217 90.6742 126.865 91.5243C126.513 92.3743 125.975 93.0028 125.251 93.4097C124.529 93.822 123.654 94.0021 122.626 93.9499C121.601 93.903 120.458 93.6187 119.198 93.0968C117.931 92.5718 116.915 91.9644 116.151 91.2746C115.392 90.5865 114.901 89.8432 114.681 89.0449C114.464 88.2481 114.533 87.4209 114.888 86.5633ZM116.141 87.082C115.789 87.9321 115.925 88.7622 116.55 89.5723C117.175 90.3824 118.246 91.1018 119.764 91.7306C120.773 92.1487 121.678 92.3966 122.477 92.4743C123.275 92.5557 123.943 92.4723 124.481 92.2241C125.018 91.9797 125.403 91.5766 125.636 91.015C125.985 90.1725 125.842 89.3419 125.207 88.5233C124.577 87.7063 123.504 86.9841 121.99 86.3569C120.98 85.9388 120.079 85.6898 119.285 85.6099C118.491 85.5301 117.827 85.6132 117.294 85.8591C116.759 86.1089 116.375 86.5166 116.141 87.082Z" fill="#00E2FF"/>
          <path d="M119.784 103.993L109.292 96.9829L110.141 95.7123L119.301 101.833L119.342 101.771L119.352 98.0734L120.643 98.936L120.633 102.723L119.784 103.993Z" fill="#00E2FF"/>
          <path d="M103.298 103.707C103.954 103.05 104.692 102.67 105.511 102.565C106.333 102.464 107.207 102.632 108.134 103.071C109.063 103.512 110.013 104.218 110.983 105.188C111.948 106.152 112.649 107.098 113.088 108.024C113.526 108.957 113.695 109.834 113.593 110.656C113.491 111.484 113.115 112.223 112.465 112.874C111.814 113.524 111.076 113.899 110.251 113.998C109.426 114.102 108.549 113.934 107.62 113.492C106.69 113.057 105.743 112.357 104.779 111.392C103.809 110.422 103.103 109.472 102.662 108.543C102.223 107.616 102.055 106.742 102.156 105.92C102.261 105.101 102.641 104.363 103.298 103.707ZM104.256 104.665C103.606 105.316 103.414 106.135 103.681 107.123C103.948 108.11 104.663 109.185 105.825 110.347C106.597 111.119 107.338 111.694 108.047 112.072C108.753 112.452 109.402 112.631 109.994 112.608C110.584 112.587 111.094 112.362 111.523 111.932C112.168 111.288 112.354 110.466 112.081 109.466C111.811 108.47 111.097 107.393 109.938 106.234C109.165 105.461 108.427 104.886 107.724 104.508C107.021 104.131 106.377 103.954 105.79 103.977C105.2 104.003 104.689 104.233 104.256 104.665Z" fill="#00E2FF"/>
          <path d="M95.2249 110.259C95.9968 109.743 96.7946 109.514 97.6184 109.571C98.4444 109.632 99.269 109.967 100.092 110.578C100.918 111.193 101.711 112.07 102.474 113.211C103.231 114.345 103.735 115.409 103.984 116.403C104.233 117.403 104.227 118.296 103.967 119.083C103.705 119.875 103.192 120.526 102.427 121.038C101.662 121.549 100.865 121.772 100.037 121.708C99.2077 121.65 98.3803 121.314 97.5548 120.699C96.7282 120.091 95.9361 119.219 95.1784 118.085C94.4162 116.945 93.9093 115.875 93.6576 114.878C93.4082 113.883 93.4135 112.993 93.6736 112.207C93.9359 111.424 94.4531 110.774 95.2249 110.259ZM95.978 111.386C95.213 111.897 94.8652 112.663 94.9346 113.684C95.004 114.704 95.4951 115.898 96.408 117.264C97.015 118.172 97.6292 118.881 98.2507 119.39C98.8687 119.9 99.4705 120.202 100.056 120.295C100.638 120.39 101.182 120.269 101.688 119.931C102.446 119.424 102.789 118.655 102.716 117.621C102.645 116.591 102.155 115.395 101.244 114.032C100.637 113.124 100.026 112.416 99.41 111.909C98.7943 111.401 98.1964 111.102 97.6164 111.01C97.0331 110.92 96.4869 111.046 95.978 111.386Z" fill="#00E2FF"/>
          <path d="M89.6114 127.471L84.7825 115.813L86.1942 115.228L90.4101 125.406L90.4784 125.378L92.5418 122.309L93.136 123.744L91.0232 126.886L89.6114 127.471Z" fill="#00E2FF"/>
          <path d="M76.0632 118.074C76.9737 117.893 77.7985 117.986 78.5377 118.354C79.2776 118.726 79.9109 119.352 80.4377 120.231C80.9652 121.115 81.3628 122.229 81.6305 123.575C81.8965 124.913 81.9545 126.088 81.8044 127.102C81.6511 128.121 81.3038 128.944 80.7626 129.571C80.2182 130.203 79.4948 130.609 78.5923 130.788C77.6899 130.968 76.8683 130.869 76.1276 130.493C75.3836 130.122 74.7479 129.494 74.2203 128.611C73.6896 127.732 73.2912 126.624 73.0251 125.287C72.7575 123.941 72.6983 122.759 72.8476 121.741C72.9977 120.727 73.3433 119.907 73.8845 119.28C74.4265 118.657 75.1528 118.255 76.0632 118.074ZM76.3277 119.403C75.4253 119.583 74.8108 120.157 74.4843 121.127C74.1579 122.096 74.1549 123.387 74.4755 124.998C74.6886 126.07 74.9849 126.96 75.3644 127.667C75.7399 128.376 76.1804 128.885 76.686 129.195C77.1875 129.506 77.7364 129.602 78.3327 129.483C79.2271 129.305 79.8383 128.725 80.1664 127.742C80.4953 126.764 80.4999 125.471 80.1801 123.864C79.967 122.792 79.673 121.904 79.2984 121.199C78.9237 120.495 78.486 119.989 77.9853 119.683C77.4805 119.377 76.928 119.284 76.3277 119.403Z" fill="#00E2FF"/>
        </svg>
        <div className='flex flex-col ml-6 md:ml-0'>
          <Flag title="A propos de l'entreprise"/>
          <h2 className='font-extrabold capitalize'>Satisfaction locale et globale</h2>
        </div>
      </div>

        <img src={AboutImg} alt="About Image" className="border-Alpha border-b-4 border-r-4 w-4/5 rounded-3xl" />

      <div className="flex flex-col items-start gap-12 md:gap-28 w-full md:w-1/2">
        {/* <article className="flex flex-col items-start gap-2 lg:gap-6 ml-6 md:ml-0">
          <svg xmlns="http://www.w3.org/2000/svg" width="37" height="36" viewBox="0 0 37 36" fill="none" className="stroke-Alpha">
            <path d="M18.5 19.5V3L30.5 9L18.5 15" stroke="inherit" stroke-width="1.66667" stroke-linecap="round" stroke-linejoin="round"/>
            <path d="M31.3415 15.333C32.1397 17.7932 32.2144 20.4309 31.5567 22.9324C30.8989 25.4338 29.5365 27.6936 27.6314 29.443C25.7262 31.1924 23.3587 32.3577 20.8104 32.8002C18.262 33.2428 15.6402 32.944 13.2568 31.9393C10.8735 30.9347 8.82884 29.2666 7.36624 27.1334C5.90364 25.0001 5.08462 22.4917 5.00663 19.9064C4.92864 17.3211 5.59496 14.7678 6.92631 12.5503C8.25767 10.3328 10.198 8.54447 12.5165 7.398" stroke="inherit" stroke-width="1.66667" stroke-linecap="round" stroke-linejoin="round"/>
            <path d="M12.503 14.9955C11.7513 15.996 11.262 17.1687 11.0795 18.4068C10.8971 19.6448 11.0273 20.9088 11.4584 22.0837C11.8894 23.2585 12.6076 24.3068 13.5475 25.1331C14.4873 25.9593 15.619 26.5373 16.8394 26.8142C18.0597 27.0912 19.33 27.0584 20.5345 26.7189C21.739 26.3793 22.8393 25.7438 23.7353 24.8701C24.6313 23.9965 25.2944 22.9125 25.6643 21.717C26.0342 20.5215 26.099 19.2525 25.853 18.0255" stroke="inherit" stroke-width="1.66667" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
          <h3>Objectif</h3>
          <p className="leading-8">Construire des partenariats à long terme fondés sur la confiance, la transparence et les résultats mesurables, assurant le succès de nos clients dans l'environnement concurrentiel d'aujourd'hui.</p>
        </article> */}
        <article className="flex flex-col items-start gap-2 lg:gap-6 ml-6 md:ml-0">
          <svg xmlns="http://www.w3.org/2000/svg" width="37" height="36" viewBox="0 0 37 36" fill="none" className="fill-Alpha">
            <path d="M23.6223 11.0243C23.1882 11.0245 22.7675 11.1753 22.4321 11.4509C22.0966 11.7265 21.8671 12.1099 21.7826 12.5358C21.6981 12.9616 21.7639 13.4036 21.9687 13.7864C22.1736 14.1692 22.5048 14.4691 22.906 14.6351C23.3072 14.801 23.7535 14.8227 24.1689 14.6965C24.5843 14.5703 24.9431 14.304 25.1842 13.9429C25.4252 13.5818 25.5336 13.1483 25.4909 12.7162C25.4481 12.2842 25.2569 11.8803 24.9498 11.5734C24.7757 11.3989 24.5687 11.2606 24.3409 11.1663C24.1131 11.0721 23.8689 11.0238 23.6223 11.0243Z" fill="inherit"/>
            <path d="M34.07 3.51984C34.0697 3.51774 34.0697 3.51561 34.07 3.51351C34.0106 3.25287 33.8795 3.01404 33.6915 2.82395C33.5035 2.63387 33.2662 2.50009 33.0062 2.43773C30.9109 1.92656 27.6147 2.47148 23.9619 3.93398C20.2804 5.41054 16.8308 7.59023 14.4993 9.92601C13.752 10.6694 13.0577 11.4642 12.4215 12.3047C10.8515 12.2344 9.4684 12.458 8.30333 12.9663C4.24348 14.753 3.08403 19.3254 2.77536 21.2027C2.73069 21.4695 2.74818 21.7429 2.82646 22.0018C2.90475 22.2607 3.04171 22.498 3.2267 22.6953C3.41169 22.8926 3.63971 23.0446 3.89302 23.1394C4.14632 23.2341 4.41809 23.2692 4.68715 23.2418H4.6963L9.21879 22.7482C9.22442 22.8059 9.23075 22.8586 9.23567 22.9071C9.29375 23.4582 9.53952 23.9726 9.93176 24.364L12.1389 26.5725C12.5297 26.9653 13.044 27.2114 13.595 27.2693L13.7462 27.2855L13.254 31.8023V31.8115C13.2289 32.0547 13.2548 32.3006 13.33 32.5333C13.4053 32.766 13.5283 32.9804 13.6912 33.1628C13.854 33.3453 14.0532 33.4917 14.2758 33.5928C14.4985 33.694 14.7399 33.7475 14.9844 33.75C15.0822 33.7502 15.1798 33.7422 15.2762 33.7261C17.1641 33.4223 21.7344 32.2769 23.5161 28.1953C24.0203 27.038 24.2432 25.6605 24.1806 24.0933C25.0248 23.4585 25.8226 22.7641 26.5677 22.0155C28.9182 19.6769 31.105 16.2555 32.5661 12.6274C34.0208 9.01616 34.5686 5.69531 34.07 3.51984ZM26.5424 15.8161C25.9647 16.3944 25.2284 16.7884 24.4267 16.9482C23.625 17.108 22.7939 17.0264 22.0386 16.7138C21.2832 16.4011 20.6376 15.8715 20.1834 15.1919C19.7291 14.5122 19.4866 13.7131 19.4866 12.8957C19.4866 12.0782 19.7291 11.2791 20.1834 10.5994C20.6376 9.9198 21.2832 9.39016 22.0386 9.07753C22.7939 8.76489 23.625 8.68331 24.4267 8.84311C25.2284 9.0029 25.9647 9.39689 26.5424 9.97523C26.9296 10.3566 27.2371 10.8113 27.447 11.3126C27.6569 11.814 27.765 12.3521 27.765 12.8957C27.765 13.4392 27.6569 13.9773 27.447 14.4787C27.2371 14.98 26.9296 15.4347 26.5424 15.8161Z" fill="inherit"/>
            <path d="M11.8857 27.1716C11.6136 27.1378 11.3386 27.2046 11.1123 27.3593C10.663 27.6666 10.2116 27.9703 9.75594 28.2663C8.83414 28.8654 7.73164 27.8135 8.27938 26.8601L9.13368 25.3835C9.25581 25.2048 9.32382 24.9947 9.32955 24.7784C9.33527 24.562 9.27847 24.3486 9.16596 24.1638C9.05344 23.9789 8.88999 23.8304 8.6952 23.7361C8.50041 23.6418 8.28255 23.6056 8.06774 23.632C7.11957 23.7519 6.23823 24.1838 5.5625 24.8597C5.30516 25.1177 4.52258 25.901 4.10141 28.8858C3.98153 29.7431 3.90597 30.606 3.875 31.4712C3.87115 31.6213 3.89741 31.7707 3.95222 31.9105C4.00703 32.0504 4.08929 32.1778 4.19414 32.2854C4.29899 32.3929 4.42432 32.4784 4.56272 32.5367C4.70112 32.595 4.84981 32.625 5 32.625H5.02813C5.89391 32.5943 6.75755 32.5192 7.61563 32.4C10.6018 31.9781 11.3851 31.1948 11.6424 30.9375C12.3214 30.2614 12.7522 29.376 12.8652 28.4245C12.9013 28.1285 12.8184 27.8303 12.6348 27.5953C12.4511 27.3604 12.1817 27.2079 11.8857 27.1716Z" fill="inherit"/>
          </svg>
          <h3>Mission</h3>
          <p className="leading-8">Nous nous engageons à établir des partenariats durables basés sur la confiance pour obtenir des résultats mesurables, permettant à nos clients de réussir au Maroc et à l’international.</p>
        </article>
      </div>

    </section>
  );
};
//? import IconSlider from "../components/IconSlider";
export function ValueProposition() {
  return (
    <article className="relative">
      <section className="flex flex-col justify-center items-center gap-12 container mx-auto text-left md:text-center bg-Beta rounded-3xl p-16 w-full md:w-1/2">
        <h2>Nous proposons...</h2>
        <p className="leading-8"> Des solutions flexibles et mutuellement bénéfiques afin de donner une chance équitable aux entreprises sur un marché concurrentiel. &nbsp; 
          <span className="text-Alpha">
            Pourquoi laisser votre stratégie commerciale et votre potentiel inexploités, alors que le simple manque de publicité et de marketing peut faire toute la différence ?
          </span>
        </p>
        <button className='bg-Alpha text-Dark py-2 px-8 ml-10 rounded'><Link to='/contact'>Contact & Connect</Link></button>
      </section>
      {/*
       // ? <IconSlider/> 
       */}
    </article>
  )
}


//? SERVICE SECTION - TO BE REVIEWED --------------------------------------

import {ServiceData, services} from '../components/Servicedata';
export const Service: React.FC = () => {
  const [selectedService, setSelectedService] = useState<ServiceData>(services[0]);
  const [servicesList, setServiceList] = useState<ServiceData[]>([]);

  useEffect(() => {
    console.log("useEffect", {selectedService, services, service: services[0]})
    setSelectedService(services[0]);
    updateServiceList();
  }, []);

  useEffect(() => {
    updateServiceList();
  }, [selectedService])

  const updateServiceList = () => {
    console.log("updateServiceList", {selectedService})
    if(!selectedService) return [];
    setServiceList(services.filter(s => s.id != selectedService.id))
    console.log("updateServiceList", {selectedService, servicesList})
  }

  // Handle service click
  const handleServiceClick = (service: ServiceData) => {
      setSelectedService(service);
  };
  

  return (
    <section className="container mx-auto block md:grid grid-cols-2 gap-20">
        <div>
          <div className="flex justify-center flex-col items-start ml-6 md:ml-0">
            <Flag title='Nos qualités'/>
            <h2>Services principaux fournis</h2>
          </div>       
          <SerivceGrid services={servicesList} className="mt-8 mb-8 md:mb-2" onSelect={handleServiceClick} /> 
          <small className="pl-6">cliquez sur la grille pour voir d'autres descriptions *</small>  
        </div>

        <div>
          {selectedService && <SerivceDescription service={selectedService} />}
        </div>
    </section>
  )
};

type SerivceDescriptionProps = {
  service: ServiceData,
}
const SerivceDescription: React.FC<SerivceDescriptionProps> = ({service}) => {
  return (
    <div className="bg-Beta p-8 flex flex-col justify-between gap-8 rounded-3xl">
      <div className="w-full">
        <div className="flex justify-between items-center text-center md:text-left mb-8">
          <div className="h-10 w-10">
            {service.icon}
          </div>

          <h4>{service.title}</h4>

          <div className="h-10 w-10">
            <svg xmlns="http://www.w3.org/2000/svg"  viewBox="0 0 20 20" fill="none">
              <rect x="0.0012207" width="20" height="20" fill="#00E2FF"/>
              <path d="M7.00122 12.3538L11.432 7.92308H7.46276V7H13.0012V12.5385H12.0781V8.56923L7.64737 13L7.00122 12.3538Z" fill="#323232"/>
            </svg>
          </div>
        </div>

        <p className="text-justify text-gray-100 text-lg">
          {service.definition}
        </p>
      </div>

      <div className="flex justify-center w-full aspect-video bg-Beta object-cover">{service.image}</div>
    </div>
  )
}


type SerivceGridProps = {
  className: string,
  services: ServiceData[],
  onSelect: (service: ServiceData) => void,
}

const SerivceGrid: React.FC<SerivceGridProps> = ({className, services, onSelect}) => {
  return (
    <div className={`grid grid-cols-2 mx-4 lg:mx-0 gap-4 lg:gap-8 ${className}`}>
      {services.map(service => (
        <SerivceGridItem service={service} onClick={() => onSelect(service)} key={service.id} />
      ))}
    </div>
  )
}


type SerivceGridItemProps = {
  service: ServiceData,
  onClick: (e?: any) => void,
}
const SerivceGridItem: React.FC<SerivceGridItemProps> = ({service, onClick}) => {
  return (
    <div className="bg-Beta p-8 flex justify-center items-center flex-col cursor-pointer rounded-3xl" onClick={(e) => onClick(e)}>
      <div className="h-16 w-16 mb-4 fill-Alpha">
        {service.icon}
      </div>

      <h2 className="text-lg md:text-2xl font-bold text-center">{service.title}</h2>
    </div>
  )
}

//? --------------------------------------------------------------------------------------

interface HoverboxProps {children: React.ReactNode;}
const Hoverbox: React.FC<HoverboxProps> = ({ children }) => {
  return <span className="absolute -bottom-28 bg-Beta py-4 px-2 rounded shadow text-Alpha">{children}</span>;
};

export function Steps() {
  const [hoveredStep, setHoveredStep] = useState<number | null>(null);
  return(
    <section className="hidden md:flex flex-col items-center container mx-auto gap-24">
      <div className="ml-6 md:ml-0">
        <Flag title="étapes vers le succès"/>
        <h2>flux de travail</h2>
      </div>
      
      <article className="flex items-center justify-center space-x-6 p-4 text-white">
      <section className="relative flex items-center">
        <div
          className="flex flex-col items-center justify-center w-80 h-80 text-center rounded-full border-2 border-Beta tooltip"
          onMouseEnter={() => setHoveredStep(1)}
          onMouseLeave={() => setHoveredStep(null)}
        >
          <h5>Step 1</h5>
          <hr className="w-2/3 h-1 my-4" />
          <h5>Documentation client</h5>
        </div>
        {hoveredStep === 1 && <Hoverbox>Nous recueillons toutes les informations nécessaires sur les besoins et les attentes du client pour garantir une compréhension claire du projet.</Hoverbox>}
        <div className="mx-4 text-Alpha text-5xl">{'>'}</div>
      </section>

      <section className="relative flex items-center">
        <div
          className="flex flex-col items-center justify-center w-80 h-80 text-center rounded-full bg-Beta"
          onMouseEnter={() => setHoveredStep(2)}
          onMouseLeave={() => setHoveredStep(null)}
        >
          <h5>Step 2</h5>
          <hr className="w-2/3 h-1 my-4" />
          <h5>Analyse et stratégie</h5>
        </div>
        {hoveredStep === 2 && <Hoverbox>Nous analysons les données collectées pour élaborer une stratégie sur mesure qui répond aux objectifs et défis spécifiques du client.</Hoverbox>}
        <div className="mx-4 text-Alpha text-5xl">{'>'}</div>
      </section>

      <section className="relative flex items-center">
        <div
          className="flex flex-col items-center justify-center w-80 h-80 text-center bg-Beta"
          onMouseEnter={() => setHoveredStep(3)}
          onMouseLeave={() => setHoveredStep(null)}
        >
          <h5>Step 3</h5>
          <hr className="w-2/3 h-1 my-4" />
          <h5>Création des solutions</h5>
        </div>
        {hoveredStep === 3 && <Hoverbox>Nous concevons et développons des solutions innovantes basées sur l'analyse, en veillant à leur alignement avec la vision du client.</Hoverbox>}
        <div className="mx-4 text-Alpha text-5xl">{'>'}</div>
      </section>

      <section className="relative">
        <div
          className="flex flex-col items-center justify-center w-80 h-80 rounded-3xl bg-Beta"
          onMouseEnter={() => setHoveredStep(4)}
          onMouseLeave={() => setHoveredStep(null)}
        >
          <h5>Step 4</h5>
          <hr className="w-2/3 h-1 my-4" />
          <h5>Mise en service</h5>
        </div>
        {hoveredStep === 4 && <Hoverbox>Nous déployons les solutions créées, assurant une transition fluide et offrant un support pour garantir leur bon fonctionnement.</Hoverbox>}
      </section>
      </article>
    </section>
  );
}

//! CHANGE PackagesTable RenderDetail into *TRUE*--------------------
import { PackagesTable , CustomPack } from "../components/PackagesTable";
export function Packages() {
  return(
    <section className="flex flex-col items-center container mx-auto gap-24">
      <div className="ml-6 md:ml-0">
        <Flag title="Prix avantageux"/>
        <h2>Packs Orientation Client</h2>
      </div>
      <div className="flex flex-col md:flex-row items-center gap-0 md:gap-14">
        <PackagesTable RenderDetail={false} />
        <div className="flex md:block flex-col items-center justify-center">
          <p className="text-center block md:hidden">plus d'informations</p> 
          <Link to='/pricing'>
          <svg xmlns="http://www.w3.org/2000/svg" width="100" height="120" viewBox="0 0 140 141" fill="none" className="fill-Beta">
            <rect y="0.5" width="140" height="140" rx="70" fill="inherit"/>
            <path fill-rule="evenodd" clip-rule="evenodd" d="M83.8072 73.8072L60.7606 96.8538L55 91.0931L75.1663 70.9269L55 50.7606L60.7606 45L83.8072 68.0466C84.5709 68.8106 85 69.8466 85 70.9269C85 72.0072 84.5709 73.0432 83.8072 73.8072Z" fill="#00E2FF"/>
          </svg>
          </Link>
        </div>
      </div>
    </section>
  )
}


export const Contact: React.FC = () => {
  const [formData, setFormData] = useState({
    user_name: '',
    user_company: '',
    user_email: '',
    user_phone: '',
    message: ''
  });
  const [message, setMessage] = useState('');
  const [messageType, setMessageType] = useState('');

  const handleFormSubmit = (event: React.FormEvent<HTMLFormElement>) => {
    event.preventDefault();
    
    // Form validation checks
    if (!/^[a-zA-Z\s]*$/.test(formData.user_name)) {
      setMessage('Name should contain only alphabetic characters.');
      setMessageType('error');
      return;
    }

    if (!/^[a-zA-Z\s]*$/.test(formData.user_company)) {
      setMessage('Company name should contain only alphabetic characters.');
      setMessageType('error');
      return;
    }

    if (!/^\d{10,}$/.test(formData.user_phone)) {
      setMessage('Phone number should be 10 digits or more.');
      setMessageType('error');
      return;
    }

    if (!/\S+@\S+\.\S+/.test(formData.user_email)) {
      setMessage('Please enter a valid email address.');
      setMessageType('error');
      return;
    }

    // If all conditions are met, proceed with sending the email
    emailjs.send('Deciphersrv23_WalidHam', 'CustomPack_Sub2023com5', {
      user_name: formData.user_name,
      user_company: formData.user_company,
      user_email: formData.user_email,
      user_phone: formData.user_phone,
      message: formData.message,
    }, 'a78S2fTPhZF0Zx6hp')
      .then((response) => {
        console.log('Email sent successfully:', response.status, response.text);
        setMessage('Email sent successfully!');
        setMessageType('success');
      })
      .catch((error) => {
        console.error('Error sending email:', error);
        setMessage('Error sending email. Please try again.');
        setMessageType('error');
      });
  };

  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {
    const { name, value } = event.target;
    setFormData({
      ...formData,
      [name]: value
    });
  };

  return (
    <section className="flex flex-col items-center container mx-auto pb-24">
      <article className="w-full max-w-3xl">
        <div className="p-6 rounded-lg bg-Beta">
          <h5 className="pb-6">Contact Us</h5>
          <form className="space-y-6" onSubmit={handleFormSubmit}>
            <div className="grid grid-cols-2 gap-6">
              <div className="space-y-2">
                <label htmlFor="clientName">Full Name</label>
                <input id="clientName" name="user_name" onChange={handleInputChange} value={formData.user_name} placeholder="Enter your full name" className="w-full px-4 py-2 bg-Beta-secondary rounded text-white"/>
              </div>
              <div className="space-y-2">
                <label htmlFor="clientPhone">Phone</label>
                <input id="clientPhone" name="user_phone" onChange={handleInputChange} value={formData.user_phone} placeholder="Enter your phone number" className="w-full px-4 py-2 bg-Beta-secondary rounded text-white" />
              </div>
            </div>
            <div className="grid grid-cols-2 gap-6">
              <div className="space-y-2">
                <label htmlFor="clientEmail">Email</label>
                <input id="clientEmail" name="user_email" type="email" onChange={handleInputChange} value={formData.user_email} placeholder="Enter your email" className="w-full px-4 py-2 bg-Beta-secondary rounded text-white"/>
              </div>
              <div className="space-y-2">
                <label htmlFor="clientCompany">Business name</label>
                <input id="clientCompany" name="user_company" onChange={handleInputChange} value={formData.user_company} placeholder="Enter your business name" className="w-full px-4 py-2 bg-Beta-secondary rounded text-white"/>
              </div>
            </div>

            <div className="space-y-2">
              <label htmlFor="clientMessage">Message</label>
              <textarea id="clientMessage" name="message" onChange={handleInputChange} value={formData.message} placeholder="Enter your message" className="w-full px-4 py-2 bg-Beta-secondary rounded min-h-[100px] text-white"/>
            </div>

            <div className="flex items-center justify-center">
              <button type="submit" className="px-8 py-4 text-Dark bg-Alpha rounded hover:bg-cyan-800">Submit</button>
            </div>
            {message && (
              <div className={`mt-4 text-${messageType === 'success' ? 'green' : 'red'}-500`}>
                {message}
              </div>
            )}
          </form>
        </div>
      </article>
    </section>
  );
};


//*---------------SMALL--COMPONENTS----------------------------

interface FlagProps { title: string;}
export function Flag({ title }: FlagProps) {
  return (
    <div className='flex items-center gap-1 w-fit fill-Alpha'>
      <svg xmlns="http://www.w3.org/2000/svg" width="32" height="9" viewBox="0 0 32 9" fill="inherit">
        <path d="M28 8.5C27.1733 8.5 26.4267 8.27333 25.76 7.82C25.0933 7.36667 24.6133 6.79333 24.32 6.1H0V2.9H24.32C24.6133 2.20667 25.0933 1.63333 25.76 1.18C26.4267 0.726667 27.1733 0.5 28 0.5C29.12 0.5 30.0667 0.886667 30.84 1.66C31.6133 2.43333 32 3.38 32 4.5C32 5.62 31.6133 6.56667 30.84 7.34C30.0667 8.11333 29.12 8.5 28 8.5Z" fill="inherit"/>
      </svg>
      <p>{title}</p>
    </div>
  );
}


